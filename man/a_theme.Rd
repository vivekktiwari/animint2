% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/theme.r
\name{a_theme}
\alias{a_theme}
\title{Set a_theme elements}
\usage{
a_theme(..., complete = FALSE, validate = TRUE)
}
\arguments{
\item{...}{a list of a_element name, element pairings that modify the
existing a_theme.}

\item{complete}{set this to TRUE if this is a complete a_theme, such as
the one returned \code{by a_theme_grey()}. Complete a_themes behave
differently when added to a ggplot object.}

\item{validate}{TRUE to run validate_element, FALSE to bypass checks.}
}
\description{
Use this function to modify a_theme settings.
}
\details{
a_theme elements can inherit properties from other a_theme elements.
For example, \code{axis.title.x} inherits from \code{axis.title},
which in turn inherits from \code{text}. All text elements inherit
directly or indirectly from \code{text}; all lines inherit from
\code{line}, and all rectangular objects inherit from \code{rect}.

For more examples of modifying properties using inheritance, see
\code{\link{+.aaa}} and \code{\link{\%+replace\%}}.

To see a graphical representation of the inheritance tree, see the
last example below.
}
\section{a_theme elements}{

The individual a_theme elements are:

\tabular{ll}{
  line             \tab all line elements
                   (\code{a_element_line}) \cr
  rect             \tab all rectangular a_elements
                   (\code{a_element_rect}) \cr
  text             \tab all text a_elements
                   (\code{a_element_text}) \cr
  title            \tab all title elements: plot, axes, legends
                   (\code{a_element_text}; inherits from \code{text}) \cr
  aspect.ratio     \tab aspect ratio of the panel \cr

  axis.title       \tab a_label of axes
                   (\code{a_element_text}; inherits from \code{text}) \cr
  axis.title.x     \tab x axis a_label
                   (\code{a_element_text}; inherits from \code{axis.title}) \cr
  axis.title.y     \tab y axis a_label
                   (\code{a_element_text}; inherits from \code{axis.title}) \cr
  axis.text        \tab tick labels along axes
                   (\code{a_element_text}; inherits from \code{text}) \cr
  axis.text.x      \tab x axis tick labels
                   (\code{a_element_text}; inherits from \code{axis.text}) \cr
  axis.text.y      \tab y axis tick labels
                   (\code{a_element_text}; inherits from \code{axis.text}) \cr
  axis.ticks       \tab tick marks along axes
                   (\code{a_element_line}; inherits from \code{line}) \cr
  axis.ticks.x     \tab x axis tick marks
                   (\code{a_element_line}; inherits from \code{axis.ticks}) \cr
  axis.ticks.y     \tab y axis tick marks
                   (\code{a_element_line}; inherits from \code{axis.ticks}) \cr
  axis.ticks.length  \tab length of tick marks
                   (\code{unit}) \cr
  axis.line        \tab lines along axes
                   (\code{a_element_line}; inherits from \code{line}) \cr
  axis.line.x      \tab line along x axis
                   (\code{a_element_line}; inherits from \code{axis.line}) \cr
  axis.line.y      \tab line along y axis
                   (\code{a_element_line}; inherits from \code{axis.line}) \cr

  legend.background  \tab background of legend
                   (\code{a_element_rect}; inherits from \code{rect}) \cr
  legend.margin    \tab extra space added around legend
                   (\code{unit}) \cr
  legend.key       \tab background underneath legend keys
                   (\code{a_element_rect}; inherits from \code{rect}) \cr
  legend.key.size  \tab size of legend keys
                   (\code{unit}; inherits from \code{legend.key.size}) \cr
  legend.key.height  \tab key background height
                   (\code{unit}; inherits from \code{legend.key.size}) \cr
  legend.key.width   \tab key background width
                   (\code{unit}; inherits from \code{legend.key.size}) \cr
  legend.text      \tab legend item labels
                   (\code{a_element_text}; inherits from \code{text}) \cr
  legend.text.align  \tab alignment of legend labels
                   (number from 0 (left) to 1 (right)) \cr
  legend.title     \tab title of legend
                   (\code{a_element_text}; inherits from \code{title}) \cr
  legend.title.align \tab alignment of legend title
                   (number from 0 (left) to 1 (right)) \cr
  legend.a_position  \tab the a_position of legends
                   ("none", "left", "right", "bottom", "top", or two-element
                     numeric vector) \cr
  legend.direction \tab layout of items in legends
                   ("horizontal" or "vertical") \cr
  legend.justification \tab anchor point for positioning legend inside plot
                   ("center" or two-element numeric vector) \cr
  legend.box       \tab arrangement of multiple legends
                   ("horizontal" or "vertical") \cr
  legend.box.just  \tab justification of each legend within the overall
                   bounding box, when there are multiple legends
                   ("top", "bottom", "left", or "right")\cr

  panel.background \tab background of plotting area, drawn underneath plot
                   (\code{a_element_rect}; inherits from \code{rect}) \cr
  panel.border     \tab border around plotting area, drawn on top of plot
                   so that it covers tick marks and grid lines. This should
                   be used with \code{fill=NA}
                   (\code{a_element_rect}; inherits from \code{rect}) \cr
  panel.margin     \tab margin around facet panels
                   (\code{unit}) \cr
  panel.margin.x   \tab horizontal margin around facet panels
                   (\code{unit}; inherits from \code{panel.margin}) \cr
  panel.margin.y   \tab vertical margin around facet panels
                   (\code{unit}; inherits from \code{panel.margin}) \cr
  panel.grid       \tab grid lines
                   (\code{a_element_line}; inherits from \code{line}) \cr
  panel.grid.major \tab major grid lines
                   (\code{a_element_line}; inherits from \code{panel.grid}) \cr
  panel.grid.minor \tab minor grid lines
                   (\code{a_element_line}; inherits from \code{panel.grid}) \cr
  panel.grid.major.x \tab vertical major grid lines
                   (\code{a_element_line}; inherits from \code{panel.grid.major}) \cr
  panel.grid.major.y \tab horizontal major grid lines
                   (\code{a_element_line}; inherits from \code{panel.grid.major}) \cr
  panel.grid.minor.x \tab vertical minor grid lines
                   (\code{a_element_line}; inherits from \code{panel.grid.minor}) \cr
  panel.grid.minor.y \tab horizontal minor grid lines
                   (\code{a_element_line}; inherits from \code{panel.grid.minor}) \cr
  panel.ontop        \tab option to place the panel (background, gridlines)
                          over the data layers.  Usually used with a transparent
                          or blank \code{panel.background}. (\code{logical}) \cr

  plot.background  \tab background of the entire plot
                   (\code{a_element_rect}; inherits from \code{rect}) \cr
  plot.title       \tab plot title (text appearance)
                   (\code{a_element_text}; inherits from \code{title})
                   left-aligned by default\cr
  plot.subtitle    \tab plot subtitle (text appearance)
                   (\code{a_element_text}; inherits from \code{title})
                   left-aligned by default\cr
  plot.caption     \tab caption below the plot (text appearance)
                   (\code{a_element_text}; inherits from \code{title})
                   right-aligned by default\cr
  plot.margin      \tab margin around entire plot
                   (\code{unit} with the sizes of the top, right, bottom, and
                    left margins) \cr

  strip.background \tab background of facet labels
                   (\code{a_element_rect}; inherits from \code{rect}) \cr
  strip.text       \tab facet labels
                   (\code{a_element_text}; inherits from \code{text}) \cr
  strip.text.x     \tab facet labels along horizontal direction
                   (\code{a_element_text}; inherits from \code{strip.text}) \cr
  strip.text.y     \tab facet labels along vertical direction
                   (\code{a_element_text}; inherits from \code{strip.text}) \cr
  strip.switch.pad.grid \tab space between strips and axes when strips are switched
                   (\code{unit}) \cr
  strip.switch.pad.wrap \tab space between strips and axes when strips are switched
                   (\code{unit}) \cr
}
}

\examples{
\donttest{
p <- a_plot(mtcars, a_aes(mpg, wt)) +
  a_geom_point()
p
p + a_theme(panel.background = a_element_rect(colour = "pink"))
p + a_theme_bw()

# Scatter plot of gas mileage by vehicle weight
p <- a_plot(mtcars, a_aes(wt, mpg)) +
  a_geom_point()
# Calculate slope and intercept of line of best fit
coef(lm(mpg ~ wt, data = mtcars))
p + a_geom_abline(intercept = 37, slope = -5)
# Calculate correlation coefficient
with(mtcars, cor(wt, mpg, use = "everything", method = "pearson"))
#annotate the plot
p + a_geom_abline(intercept = 37, slope = -5) +
a_geom_text(data = data.frame(), a_aes(4.5, 30, a_label = "Pearson-R = -.87"))

# Change the axis labels
# Original plot
p
p + labs(x = "Vehicle Weight", y = "Miles per Gallon")
# Or
p + labs(x = "Vehicle Weight", y = "Miles per Gallon")

# Change title appearance
p <- p + labs(title = "Vehicle Weight-Gas Mileage Relationship")
# Set title to twice the base font size
p + a_theme(plot.title = a_element_text(size = rel(2)))
p + a_theme(plot.title = a_element_text(size = rel(2), colour = "blue"))

# Add a subtitle and adjust bottom margin
p + labs(title = "Vehicle Weight-Gas Mileage Relationship",
         subtitle = "You need to wrap long subtitleson manually") +
    a_theme(plot.subtitle = a_element_text(margin = margin(b = 20)))

# Changing plot look with a_themes
DF <- data.frame(x = rnorm(400))
m <- a_plot(DF, a_aes(x = x)) +
  a_geom_histogram()
# Default is a_theme_grey()
m
# Compare with
m + a_theme_bw()

# Manipulate Axis Attributes
m + a_theme(axis.line = a_element_line(size = 3, colour = "red", linetype = "dotted"))
m + a_theme(axis.text = a_element_text(colour = "blue"))
m + a_theme(axis.text.y = a_element_blank())
m + a_theme(axis.ticks = a_element_line(size = 2))
m + a_theme(axis.title.y = a_element_text(size = rel(1.5), angle = 90))
m + a_theme(axis.title.x = a_element_blank())
m + a_theme(axis.ticks.length = unit(.85, "cm"))

# Legend Attributes
z <- a_plot(mtcars, a_aes(wt, mpg)) +
  a_geom_point(a_aes(colour = factor(cyl)))
z
z + a_theme(legend.a_position = "none")
z + a_theme(legend.a_position = "bottom")
# Or use relative coordinates between 0 and 1
z + a_theme(legend.a_position = c(.5, .5))
# Add a border to the whole legend
z + a_theme(legend.background = a_element_rect(colour = "black"))
# Legend margin controls extra space around outside of legend:
z + a_theme(legend.background = a_element_rect(),
          legend.margin = unit(1, "cm"))
z + a_theme(legend.background = a_element_rect(),
          legend.margin = unit(0, "cm"))
# Or to just the keys
z + a_theme(legend.key = a_element_rect(colour = "black"))
z + a_theme(legend.key = a_element_rect(fill = "yellow"))
z + a_theme(legend.key.size = unit(2.5, "cm"))
z + a_theme(legend.text = a_element_text(size = 20, colour = "red", angle = 45))
z + a_theme(legend.title = a_element_text(face = "italic"))

# To change the title of the legend use the name argument
# in one of the scale options
z + a_scale_colour_brewer(name = "My Legend")
z + a_scale_colour_grey(name = "Number of \\nCylinders")

# Panel and Plot Attributes
z + a_theme(panel.background = a_element_rect(fill = "black"))
z + a_theme(panel.border = a_element_rect(linetype = "dashed", colour = "black"))
z + a_theme(panel.grid.major = a_element_line(colour = "blue"))
z + a_theme(panel.grid.minor = a_element_line(colour = "red", linetype = "dotted"))
z + a_theme(panel.grid.major = a_element_line(size = 2))
z + a_theme(panel.grid.major.y = a_element_blank(),
          panel.grid.minor.y = a_element_blank())
z + a_theme(plot.background = a_element_rect())
z + a_theme(plot.background = a_element_rect(fill = "green"))

# Faceting Attributes
set.seed(4940)
dsmall <- diamonds[sample(nrow(diamonds), 1000), ]
k <- a_plot(dsmall, a_aes(carat, ..density..)) +
  a_geom_histogram(binwidth = 0.2) +
  a_facet_grid(. ~ cut)
k + a_theme(strip.background = a_element_rect(colour = "purple", fill = "pink",
                                          size = 3, linetype = "dashed"))
k + a_theme(strip.text.x = a_element_text(colour = "red", angle = 45, size = 10,
                                      hjust = 0.5, vjust = 0.5))
k + a_theme(panel.margin = unit(5, "lines"))
k + a_theme(panel.margin.y = unit(0, "lines"))

# Put gridlines on top
meanprice <- tapply(diamonds$price, diamonds$cut, mean)
cut <- factor(levels(diamonds$cut), levels = levels(diamonds$cut))
df <- data.frame(meanprice, cut)
g <- a_plot(df, a_aes(cut, meanprice)) + a_geom_bar(a_stat = "identity")
g + a_geom_bar(a_stat = "identity") +
    a_theme(panel.background = a_element_blank(),
          panel.grid.major.x = a_element_blank(),
          panel.grid.minor.x = a_element_blank(),
          panel.grid.minor.y = a_element_blank(),
          panel.ontop = TRUE)

# Modify a a_theme and save it
mya_theme <- a_theme_grey() + a_theme(plot.title = a_element_text(colour = "red"))
p + mya_theme

}
}
\seealso{
\code{\link{+.aaa}}

\code{\link{\%+replace\%}}

\code{\link{rel}}

\code{\link{a_element_blank}}

\code{\link{a_element_line}}

\code{\link{a_element_rect}}

\code{\link{a_element_text}}
}
