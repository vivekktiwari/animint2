% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/geom-crossbar.r, R/geom-errorbar.r,
%   R/geom-linerange.r, R/geom-pointrange.r
\name{a_geom_crossbar}
\alias{a_geom_crossbar}
\alias{a_geom_errorbar}
\alias{a_geom_linerange}
\alias{a_geom_pointrange}
\title{Vertical intervals: lines, crossbars & errorbars.}
\usage{
a_geom_crossbar(mapping = NULL, data = NULL, a_stat = "identity",
  a_position = "identity", ..., fatten = 2.5, na.rm = FALSE,
  show.legend = NA, inherit.a_aes = TRUE)

a_geom_errorbar(mapping = NULL, data = NULL, a_stat = "identity",
  a_position = "identity", ..., na.rm = FALSE, show.legend = NA,
  inherit.a_aes = TRUE)

a_geom_linerange(mapping = NULL, data = NULL, a_stat = "identity",
  a_position = "identity", ..., na.rm = FALSE, show.legend = NA,
  inherit.a_aes = TRUE)

a_geom_pointrange(mapping = NULL, data = NULL, a_stat = "identity",
  a_position = "identity", ..., fatten = 4, na.rm = FALSE,
  show.legend = NA, inherit.a_aes = TRUE)
}
\arguments{
\item{mapping}{Set of aesthetic mappings created by \code{\link{a_aes}} or
\code{\link{a_aes_}}. If specified and \code{inherit.a_aes = TRUE} (the
default), it is combined with the default mapping at the top level of the
plot. You must supply \code{mapping} if there is no plot mapping.}

\item{data}{The data to be displayed in this layer. There are three
   options:

   If \code{NULL}, the default, the data is inherited from the plot
   data as specified in the call to \code{\link{a_plot}}.

   A \code{data.frame}, or other object, will override the plot
   data. All objects will be fortified to produce a data frame. See
   \code{\link{a_fortify}} for which variables will be created.

   A \code{function} will be called with a single argument,
   the plot data. The return value must be a \code{data.frame.}, and
   will be used as the layer data.}

\item{a_stat}{The statistical transformation to use on the data for this
layer, as a string.}

\item{a_position}{Position adjustment, either as a string, or the result of
a call to a position adjustment function.}

\item{...}{other arguments passed on to \code{\link{a_layer}}. These are
often aesthetics, used to set an aesthetic to a fixed value, like
\code{color = "red"} or \code{size = 3}. They may also be parameters
to the paired a_geom/a_stat.}

\item{fatten}{A multiplicative factor used to increase the size of the
middle bar in \code{a_geom_crossbar()} and the middle point in
\code{a_geom_pointrange()}.}

\item{na.rm}{If \code{FALSE} (the default), removes missing values with
a warning.  If \code{TRUE} silently removes missing values.}

\item{show.legend}{logical. Should this layer be included in the legends?
\code{NA}, the default, includes if any aesthetics are mapped.
\code{FALSE} never includes, and \code{TRUE} always includes.}

\item{inherit.a_aes}{If \code{FALSE}, overrides the default aesthetics,
rather than combining with them. This is most useful for helper functions
that define both data and aesthetics and shouldn't inherit behaviour from
the default plot specification, e.g. \code{\link{borders}}.}
}
\description{
Various ways of representing a vertical interval defined by \code{x},
\code{ymin} and \code{ymax}.
}
\section{Aesthetics}{

\Sexpr[results=rd,stage=build]{animint2:::rd_aesthetics("a_geom", "linerange")}
}

\examples{
#' # Create a simple example dataset
df <- data.frame(
  trt = factor(c(1, 1, 2, 2)),
  resp = c(1, 5, 3, 4),
  group = factor(c(1, 2, 1, 2)),
  upper = c(1.1, 5.3, 3.3, 4.2),
  lower = c(0.8, 4.6, 2.4, 3.6)
)

p <- a_plot(df, a_aes(trt, resp, colour = group))
p + a_geom_linerange(a_aes(ymin = lower, ymax = upper))
p + a_geom_pointrange(a_aes(ymin = lower, ymax = upper))
p + a_geom_crossbar(a_aes(ymin = lower, ymax = upper), width = 0.2)
p + a_geom_errorbar(a_aes(ymin = lower, ymax = upper), width = 0.2)

# Draw lines connecting group means
p +
  a_geom_line(a_aes(group = group)) +
  a_geom_errorbar(a_aes(ymin = lower, ymax = upper), width = 0.2)

# If you want to dodge bars and errorbars, you need to manually
# specify the dodge width
p <- a_plot(df, a_aes(trt, resp, fill = group))
p +
 a_geom_bar(a_position = "dodge", a_stat = "identity") +
 a_geom_errorbar(a_aes(ymin = lower, ymax = upper), a_position = "dodge", width = 0.25)

# Because the bars and errorbars have different widths
# we need to specify how wide the objects we are dodging are
dodge <- a_position_dodge(width=0.9)
p +
  a_geom_bar(a_position = dodge, a_stat = "identity") +
  a_geom_errorbar(a_aes(ymin = lower, ymax = upper), a_position = dodge, width = 0.25)
}
\seealso{
\code{\link{a_stat_summary}} for examples of these guys in use,
 \code{\link{a_geom_smooth}} for continuous analog
}
