% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/coord-transform.r
\name{a_coord_trans}
\alias{a_coord_trans}
\title{Transformed cartesian coordinate system.}
\usage{
a_coord_trans(x = "identity", y = "identity", limx = NULL, limy = NULL,
  xtrans, ytrans)
}
\arguments{
\item{x, y}{transformers for x and y axes}

\item{limx, limy}{limits for x and y axes. (Named so for backward
compatibility)}

\item{xtrans, ytrans}{Deprecated; use \code{x} and \code{y} instead.}
}
\description{
\code{a_coord_trans} is different to scale transformations in that it occurs after
statistical transformation and will affect the visual appearance of geoms - there is
no guarantee that straight lines will continue to be straight.
}
\details{
All current transformations only work with continuous values - see
\code{\link[scales]{trans_new}} for list of transformations, and instructions on
how to create your own.
}
\examples{
\donttest{
# See ?a_geom_boxplot for other examples

# Three ways of doing transformation in ggplot:
#  * by transforming the data
a_plot(diamonds, a_aes(log10(carat), log10(price))) +
  a_geom_point()
#  * by transforming the scales
a_plot(diamonds, a_aes(carat, price)) +
  a_geom_point() +
  a_scale_x_log10() +
  a_scale_y_log10()
#  * by transforming the coordinate system:
a_plot(diamonds, a_aes(carat, price)) +
  a_geom_point() +
  a_coord_trans(x = "log10", y = "log10")

# The difference between transforming the scales and
# transforming the coordinate system is that scale
# transformation occurs BEFORE statistics, and coordinate
# transformation afterwards.  Coordinate transformation also
# changes the shape of geoms:

d <- subset(diamonds, carat > 0.5)

a_plot(d, a_aes(carat, price)) +
  a_geom_point() +
  a_geom_smooth(method = "lm") +
  a_scale_x_log10() +
  a_scale_y_log10()

a_plot(d, a_aes(carat, price)) +
  a_geom_point() +
  a_geom_smooth(method = "lm") +
  a_coord_trans(x = "log10", y = "log10")

# Here I used a subset of diamonds so that the smoothed line didn't
# drop below zero, which obviously causes problems on the log-transformed
# scale

# With a combination of scale and coordinate transformation, it's
# possible to do back-transformations:
a_plot(diamonds, a_aes(carat, price)) +
  a_geom_point() +
  a_geom_smooth(method = "lm") +
  a_scale_x_log10() +
  a_scale_y_log10() +
  a_coord_trans(x = scales::exp_trans(10), y = scales::exp_trans(10))

# cf.
a_plot(diamonds, a_aes(carat, price)) +
  a_geom_point() +
  a_geom_smooth(method = "lm")

# Also works with discrete scales
df <- data.frame(a = abs(rnorm(26)),letters)
plot <- a_plot(df,a_aes(a,letters)) + a_geom_point()

plot + a_coord_trans(x = "log10")
plot + a_coord_trans(x = "sqrt")
}
}
