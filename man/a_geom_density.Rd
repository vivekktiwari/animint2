% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/geom-density.r, R/stat-density.r
\name{a_geom_density}
\alias{a_geom_density}
\alias{a_stat_density}
\title{Display a smooth density estimate.}
\usage{
a_geom_density(mapping = NULL, data = NULL, a_stat = "density",
  a_position = "identity", ..., na.rm = FALSE, show.legend = NA,
  inherit.a_aes = TRUE)

a_stat_density(mapping = NULL, data = NULL, a_geom = "area",
  a_position = "stack", ..., bw = "nrd0", adjust = 1,
  kernel = "gaussian", trim = FALSE, na.rm = FALSE, show.legend = NA,
  inherit.a_aes = TRUE)
}
\arguments{
\item{mapping}{Set of aesthetic mappings created by \code{\link{a_aes}} or
\code{\link{a_aes_}}. If specified and \code{inherit.a_aes = TRUE} (the
default), it is combined with the default mapping at the top level of the
plot. You must supply \code{mapping} if there is no plot mapping.}

\item{data}{The data to be displayed in this layer. There are three
   options:

   If \code{NULL}, the default, the data is inherited from the plot
   data as specified in the call to \code{\link{a_plot}}.

   A \code{data.frame}, or other object, will override the plot
   data. All objects will be fortified to produce a data frame. See
   \code{\link{a_fortify}} for which variables will be created.

   A \code{function} will be called with a single argument,
   the plot data. The return value must be a \code{data.frame.}, and
   will be used as the layer data.}

\item{a_position}{Position adjustment, either as a string, or the result of
a call to a position adjustment function.}

\item{...}{other arguments passed on to \code{\link{a_layer}}. These are
often aesthetics, used to set an aesthetic to a fixed value, like
\code{color = "red"} or \code{size = 3}. They may also be parameters
to the paired a_geom/a_stat.}

\item{na.rm}{If \code{FALSE} (the default), removes missing values with
a warning.  If \code{TRUE} silently removes missing values.}

\item{show.legend}{logical. Should this layer be included in the legends?
\code{NA}, the default, includes if any aesthetics are mapped.
\code{FALSE} never includes, and \code{TRUE} always includes.}

\item{inherit.a_aes}{If \code{FALSE}, overrides the default aesthetics,
rather than combining with them. This is most useful for helper functions
that define both data and aesthetics and shouldn't inherit behaviour from
the default plot specification, e.g. \code{\link{borders}}.}

\item{a_geom, a_stat}{Use to override the default connection between
\code{a_geom_density} and \code{a_stat_density}.}

\item{bw}{the smoothing bandwidth to be used, see
\code{\link{density}} for details}

\item{adjust}{adjustment of the bandwidth, see
\code{\link{density}} for details}

\item{kernel}{kernel used for density estimation, see
\code{\link{density}} for details}

\item{trim}{This parameter only matters if you are displaying multiple
densities in one plot. If \code{FALSE}, the default, each density is
computed on the full range of the data. If \code{TRUE}, each density
is computed over the range of that group: this typically means the
estimated x values will not line-up, and hence you won't be able to
stack density values.}
}
\description{
A kernel density estimate, useful for display the distribution of variables
with underlying smoothness.
}
\section{Aesthetics}{

\Sexpr[results=rd,stage=build]{animint2:::rd_aesthetics("a_geom", "density")}
}

\section{Computed variables}{

\describe{
  \item{density}{density estimate}
  \item{count}{density * number of points - useful for stacked density
     plots}
  \item{scaled}{density estimate, scaled to maximum of 1}
}
}

\examples{
a_plot(diamonds, a_aes(carat)) +
  a_geom_density()

a_plot(diamonds, a_aes(carat)) +
  a_geom_density(adjust = 1/5)
a_plot(diamonds, a_aes(carat)) +
  a_geom_density(adjust = 5)

a_plot(diamonds, a_aes(depth, colour = cut)) +
  a_geom_density() +
  xlim(55, 70)
a_plot(diamonds, a_aes(depth, fill = cut, colour = cut)) +
  a_geom_density(alpha = 0.1) +
  xlim(55, 70)

\donttest{
# Stacked density plots: if you want to create a stacked density plot, you
# probably want to 'count' (density * n) variable instead of the default
# density

# Loses marginal densities
a_plot(diamonds, a_aes(carat, fill = cut)) +
  a_geom_density(a_position = "stack")
# Preserves marginal densities
a_plot(diamonds, a_aes(carat, ..count.., fill = cut)) +
  a_geom_density(a_position = "stack")

# You can use a_position="fill" to produce a conditional density estimate
a_plot(diamonds, a_aes(carat, ..count.., fill = cut)) +
  a_geom_density(a_position = "fill")
}
}
\seealso{
See \code{\link{a_geom_histogram}}, \code{\link{a_geom_freqpoly}} for
  other methods of displaying continuous distribution.
  See \code{\link{a_geom_violin}} for a compact density display.
}
